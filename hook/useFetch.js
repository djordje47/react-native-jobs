import { useState, useEffect } from 'react';import axios from 'axios';const useFetch = (endpoint, query) => {  const [data, setData] = useState([]);  const [isLoading, setIsLoading] = useState(false);  const [error, setError] = useState(null);  const options = {    method: 'GET',    headers: {      'X-RapidAPI-Key': 'LFPHlCGxl6mshvsaIuFKeULkuPXyp1ilKoYjsnncRrDK4PznWZ',      'X-RapidAPI-Host': 'jsearch.p.rapidapi.com',    },    url: `https://jsearch.p.rapidapi.com/${ endpoint }`,    params: { ...query },  };  const fetchData = async () => {    setIsLoading(true);    try {      const response = await axios.request(options);      setData(response.data.data);      setIsLoading(false);    } catch (e) {      setError(e);      console.log('error', e);      alert('There is an error!');    } finally {      setIsLoading(false);    }  };  useEffect(() => {    fetchData();  }, []);  const reFetch = () => {    setIsLoading(true);    fetchData();  };  return { data, isLoading, error, reFetch };};export default useFetch;